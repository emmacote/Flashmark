---
- name: Update apt cache
  apt: update_cache=yes cache_valid_time=86400

- name: Install core mysql resources
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - python-mysqldb
    - mysql-server-5.5

- name: Setup the root mysql user
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
  ignore_errors: true

- name: Set up the public user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: public
    password: "{{ public_user_password }}"
    priv: "learningmachine.*: SELECT,INSERT"

- name: Install apt packages for git, nginx, and pip3
  apt:
    pkg: "{{item}}"
    state: present
  with_items:
    - git
    - nginx
    - python3-pip

- name: copy the requirements file over
  copy:
    src: requirements.txt
    dest: /tmp/requirements.txt

- name: pip install the required python3 libs (including uwsgi)
  pip:
    executable: pip3
    requirements: /tmp/requirements.txt

- name: copy over nginx configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Create the learning machine database
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: learningmachine
    state: present

- name: Make the directories
  file:
    path: "{{item}}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0770
  with_items:
    - /var/app/learningmachine/
    - /var/log/learningmachine/
    - /var/www/learningmachine/

- name: Copy over the source and config files for the learning machine app
  copy:
    src: "{{item}}"
    dest: /var/app/learningmachine/{{item}}
    mode: 0660
    owner: www-data
    group: www-data
  with_items:
    - client_secret.json
    - lm.ini
    - login.py
    - model.py
    - view.py
    - tabledefs.py
  notify: update tables

- name: Copy over util scripts to handle deletions and ensuring table existence
  copy:
    src: "{{ item }}"
    dest: /var/app/learningmachine/
    mode: 0550
    owner: www-data
    group: www-data
  with_items:
    - purge_deletions.py
    - make_tables.py

- name: Set up the cron job
  cron:
    name: Purge Deletions
    state: present
    job: /var/app/learningmachine/purge_deletions.py
    user: www-data
    minute: "*/2"

- name: Copy over the html and javascript static assets
  copy:
    src: static
    dest: /var/www/learningmachine/
    mode: 0660
    owner: www-data
    group: www-data


- name: set up the config template
  template:
    src: config.ini.template
    dest: /var/app/learningmachine/config.ini
    mode: 0660
    owner: www-data
    group: www-data

- name: Copy over the upstart learningmachine service script
  copy:
    src: learningmachine.conf
    dest: /etc/init/learningmachine.conf
    owner: www-data
    group: www-data
    mode: 0660
